name: Enforce Webhook Mergeability

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check-webhook:
    runs-on: ubuntu-latest
    steps:
    - name: Call webhook to initiate check
      id: initiate-webhook
      run: |
        response=$(curl -s -X POST -H "Content-Type: application/json" \
          -d '{"action": "check"}' \
            https://fcc6-2405-201-4041-182c-fd2d-c1f4-ac54-d5ea.ngrok-free.app/webhook)
        echo "response=$response" >> $GITHUB_ENV
        echo "Polling for result..."

    - name: Poll for mergeability result
      id: poll-webhook
      run: |
        max_attempts=10      # Number of polling attempts
        delay=20             # Delay in seconds between each attempt
        attempt=0
        result="pending"

        while [ $attempt -lt $max_attempts ]; do
          echo "Polling attempt: $((attempt + 1))..."
          response=$(curl -s -X GET https://fcc6-2405-201-4041-182c-fd2d-c1f4-ac54-d5ea.ngrok-free.app/status)

          # Log the response
          echo "Polling response: $response"

          # Strip any extra spaces or newlines from the response (to handle any unexpected formatting)
          response_cleaned=$(echo "$response" | tr -d '[:space:]')

          # Check if the result is available
          if [[ "$response_cleaned" == *"mergeable":true"* ]]; then
            echo "mergeable=true"
            echo "Result is mergeable."
            exit 0
          elif [[ "$response_cleaned" == *"mergeable":false"* ]]; then
            echo "mergeable=false"
            echo "Result is not mergeable."
            exit 1
          else
            echo "Result not ready, waiting..."
            sleep $delay
            attempt=$((attempt + 1))
          fi
        done
        
        # If we exceed the max attempts, exit with an error
        echo "Timeout reached. Mergeability check did not complete."
        exit 1
